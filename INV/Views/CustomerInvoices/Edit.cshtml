@model INV.Models.CustomerInvoice

@{
    ViewBag.Title = "Edit Customer Invoice";
}

<div class="box box-warning">
    <div class="box-header with-border">
        <h3 class="box-title">Edit Customer Invoice</h3>
        <div class="box-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    @Html.HiddenFor(model => model.Cinv_id)

                    @Html.HiddenFor(model => model.ord_id)

                    @Html.HiddenFor(model => model.pro_id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.cust_id, "cust_id", htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.DropDownList("cust_id", null, htmlAttributes: new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.cust_id, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.emp_id, "emp_id", htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.DropDownList("emp_id", null, htmlAttributes: new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.emp_id, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateTime, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateTime, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.DateTime, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UnitPrice, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.UnitPrice, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Quantity, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Quantity, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Discount, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Discount, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Discount, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-block btn-success"/>
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}